services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1"  # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: ${KHOST}  # docker-machine ip changed the .env to localhost
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://${KHOST}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    hostname: db-container
    restart: always
    environment:
      MYSQL_DATABASE: ${DBNAME}
      MYSQL_USER: ${DBUSER}
      MYSQL_PASSWORD: ${PASSWORD}
      MYSQL_ROOT_PASSWORD: ${ROOTPASSWORD}
      TZ: America/Vancouver
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
  
  receiver:
    build:
      context: ../3855-Project/Receiver
      dockerfile: Dockerfile
    hostname: receivercon
    ports:
      - '8080:8080'
    depends_on:
      - "kafka"
    environment:  
      - TZ: America/Vancouver
      - KAFKA_BROKER=kafka:9092
  
  storage:
    build:
      context: ../3855-Project/Storage
      dockerfile: Dockerfile
    hostname: storagecon
    ports:
      - '8090:8090'
    depends_on:
      - "kafka"
    environment:  
      TZ: America/Vancouver
    

  processing:
    build:
      context: ../3855-Project/Processing
      dockerfile: Dockerfile
    hostname: processingcon
    ports:
      - '8100:8100'
    depends_on:
      - "storage"
      - "kafka"
    # network_mode: "host"
    environment:  
      TZ: America/Vancouver 
  
  analyzer:
    build:
      context: ../3855-Project/Analyzer
      dockerfile: Dockerfile
    hostname: analyzercon
    ports:
      - '8110:8110'
    depends_on:
      - "kafka"
    environment:  
      TZ: America/Vancouver

# Volume definitions
volumes:
  my-db:
